% siunitx issues will be resolved once there is an siunitx extension for MathJax. 
%   This is being worked on: https://github.com/mathjax/MathJax/issues/447

%load extra packages 
\usepackage{verbatim}
\usepackage[T1]{fontenc}
%\usepackage{myexternalize}

% the mathml indicates math will be processed into MathML. Further below, we allow this for \(...\) and \[...\] math, 
% but keep $...$, $$...$$, and align environment math literal for MathJax to process directly.
\Preamble{xhtml,mathml}

% CSS can be added to the html file like this. 
\Css{div.newtheorem {margin-top:0em;}} % affects the problems and answers. For some reason there is a default margin-top:2em, which messes up alignment in multicolor

% Generic setup stuff
\Configure{VERSION}{}
\Configure{DOCTYPE}{\HCode{<!DOCTYPE html>\Hnewline}}
\Configure{HTML}{\HCode{<html>\Hnewline}}{\HCode{\Hnewline</html>}}
\Configure{@HEAD}{}
\Configure{@HEAD}{\HCode{<meta charset="UTF-8" />\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="generator" content="TeX4ht
(http://www.cse.ohio-state.edu/\string~gurari/TeX4ht/)" />\Hnewline}}

% Graphics
\Configure{graphics*}  
         {svg}{  
          {\Configure{Needs}{File: \Gin@base.svg}\Needs{}}
          \Picture[\csname a:GraphicsAlt\endcsname]{\csname Gin@base\endcsname.svg \csname a:Gin-dim\endcsname}%  
         }  

% Load MathJax script
\Configure{@HEAD}{\HCode{<link
rel="stylesheet" type="text/css"
href="\expandafter\csname aa:CssFile\endcsname" />\Hnewline}}
\Configure{@HEAD}{\HCode{
<script type="text/x-mathjax-config">    
  MathJax.Ajax.config.path["Contrib"] = "//cdn.mathjax.org/mathjax/contrib";  %  Trying to get prototype siunitx extension                                       
  MathJax.Hub.Config({
    TeX: {           
    Macros: {
      %relax: "{}", % \relax sort of doesn't do anything, but MathJax doesn't recognize it, so this shouldn't hurt; if the siunitx extension comes, this maybe will be able to go away 
      mleft: "",
      mright: "",
      SI: "",
      second: "s",
    },
    extensions: ["tex2jax.js", "cancel.js"], 
    },
    tex2jax: {       
      \unexpanded{
      inlineMath: [ ['\$','\$'], ["\\\\(","\\\\)"] ],
      displayMath: [ ['$$','$$'], ["\\[","\\]"] ],}
      processEscapes: true
    }                   
  });                  
</script>   
}}
\Configure{@HEAD}{\HCode{<script type="text/javascript"\Hnewline
src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"\Hnewline
></script>\Hnewline}}
\Configure{@HEAD}{\HCode{<style type="text/css">\Hnewline
  .MathJax_MathML {text-indent: 0;}\Hnewline
</style>\Hnewline}}

% Alteration of existing LaTeX sections and environments
\Configure{section}
	{\HCode{<HR>}
	}{\Hnewline}
	{\HCode{<H1>}}{\HCode{</H1>}}
\Configure{subsection}
	{}{\Hnewline}
	{\HCode{<H2>}}{\HCode{</H2>}}
\setlist[parts]{label={}}	
\ConfigureList{parts}
	{\HCode{<ol style = "list-style-type: none">}}{\HCode{</ol>}}
	{\HCode{<li style="margin-top: 2em;">}}{}

\def\pgfsysdriver{pgfsys-tex4ht.def}

\newtoks\eqtoks 
\def\AltMath#1${\eqtoks{$#1$}% 
   \HCode{\the\eqtoks}$}
\Configure{$}{}{}{\expandafter\AltMath}  
\def\AltlMathI#1\){\eqtoks{\(#1\)}% 
        \HCode{\the\eqtoks}}
% These next ones don't quite work, and so they are commented out. 
% They should be making the contents of \[...\] and \(...\) come out literal, so that MathJax can process the LaTeX commands. 
% But they lead to an unbalanced brace error that I do not understand.
% In any case, it's maybe best this way. This way, math in $...$ and $$...$$ will be left verbatim for MathJax to process,
%    and math in \(...\) and \[...\] will be processed into MathML, for MathJax to process. 
% Certain things will work one way and not the other, so it's nice to have options.
%\Configure{()}{\AltlMathI}{} 
\def\AltlDisplay#1\]{\eqtoks{\[#1\]}%
        \HCode{\the\eqtoks}}
%\Configure{[]}{\AltlDisplay}{}
\def\AltlDisplayI#1$${\eqtoks{$$#1$$}%
  \HCode{\the\eqtoks}$$}           
\Configure{$$}{}{}{\expandafter\AltlDisplayI}  
\begin{document} %---------------------------------------------------------------------------------------Begin Document
% Alteration of existing LaTeX commands
\renewcommand{\cref}[1]{\ref{#1}}
\renewcommand{\toprule}{\hline}
\renewcommand{\midrule}{\hline}
\renewcommand{\bottomrule}{\hline}
\newcommand\VerbMath[1]{%
\renewenvironment{#1}{%
%\ifvmode \IgnorePar\fi \EndP
\NoFonts%
\char`\\begin\{#1\}%
\verbatim}{\endverbatim\string\end\{#1\}\EndNoFonts}%
}

% Use \VerbMath to make math environments like align come out literal for direct processing by MathJax
\VerbMath{align}
\VerbMath{align*}	
\EndPreamble
