## ********************************************************************* ##
## Copyright 2016                                                        ##
## Alex Jordan                                                           ##
##                                                                       ##
## This file is part of the PCC Calculsu Lab Manual.                     ##
##                                                                       ##
## ********************************************************************* ##

#######################
# DO NOT EDIT THIS FILE
#######################

#   1) Do make a copy of Makefile.paths.original
#      as Makefile.paths
#   2) Edit Makefile.paths as directed there
#   3) This file (Makefile) and Makefile.paths.original
#      are managed by revision control and edits will conflict
#   4) See updated history in Makefile.paths.original
#      for changes, or follow the revision control history

##############
# Introduction
##############

# This is not a "true" makefile, since it does not
# operate on dependencies.  It is more of a shell
# script, sharing common configurations

######################
# System Prerequisites
######################

#   install         (system tool to make directories)
#   xsltproc        (xml/xsl text processor)
#   xmllint         (only to check source against DTD)
#   <helpers>       (PDF viewer, web browser, pager, Sage executable, etc)

#####
# Use
#####

#	A) Set default directory to be the location of this file
#	B) At command line:  make <some-target>

# The included file contains customized versions
# of locations of the principal components of this
# project and names of various helper executables
include Makefile.paths

# These paths are subdirectories of
# the Calculus-Lab-Manual distribution
SRC = $(CLM)/src
CLMXSL = $(CLM)/xsl
CLMCSS = $(CLM)/css
IMAGESSRC = $(SRC)/images

# These paths are subdirectories of
# the Mathbook XML distribution
# MBUSR is where extension files get copied
# so relative paths work properly
MBXSL = $(MB)/xsl
MBUSR = $(MB)/user
DTD = $(MB)/schema/dtd

# These paths are subdirectories of
# the scratch directory
PGOUT      = $(OUTPUT)/pg
HTMLOUT    = $(OUTPUT)/html
PDFOUT     = $(OUTPUT)/pdf
EPUBOUT    = $(OUTPUT)/epub
IMAGESOUT  = $(OUTPUT)/images

# Some aspects of producing these examples require a WeBWorK server.
# For all but trivial testing or examples, please look into setting
# up your own WeBWorK server, or consult Alex Jordan about the use
# of PCC's server in a nontrivial capacity.    <alex.jordan@pcc.edu>
SERVER = https://webwork.pcc.edu

#  Write out each WW problem as a standalone problem in PGML ready 
#  for use on a WW server.  "def" files and "header" files are 
#  produced. Directories and filenames are derived from titles of 
#  chapters, sections, etc., in addition to the titles of the 
#  problems themselves.
#
#  Results land in the subdirectory:  $(PGOUT)/local
#
pg:
	install -d $(PGOUT)
	cd $(PGOUT); \
	xsltproc --stringparam chunk.level 2 $(MBXSL)/extract-webwork.xsl $(SRC)/clm.xml

#  HTML output 
#  Output lands in the subdirectory:  $(HTMLOUT)
html:
	install -d $(HTMLOUT)
	-rm $(HTMLOUT)/*.html
	-rm $(HTMLOUT)/knowl/*.html
	install -d $(HTMLOUT)/images
	-rm $(HTMLOUT)/images/*.svg
	cp -a $(IMAGESOUT) $(HTMLOUT)
	cp -a $(IMAGESSRC) $(HTMLOUT)
	install -d $(HTMLOUT)/css
	cp -a $(CLMCSS) $(HTMLOUT)
	cd $(HTMLOUT); \
	xsltproc -xinclude --stringparam html.knowl.exercise.inline no $(CLMXSL)/clm-html.xsl $(SRC)/clm.xml
	perl -pi -e 's/<\/div><\/main>/<footer><a rel="license" href="http:\/\/creativecommons\.org\/licenses\/by-sa\/4\.0\/"><img alt="Creative Commons License" style="border-width:0" src="https:\/\/i\.creativecommons\.org\/l\/by-sa\/4\.0\/88x31\.png" \/><\/a><br \/>This work is licensed under a <a rel="license" href="http:\/\/creativecommons\.org\/licenses\/by-sa\/4\.0\/">Creative Commons Attribution-ShareAlike 4\.0 International License<\/a>\.<\/footer><\/div><\/main>/g' *.html
	perl -pi -e 's/<footer><a rel="license" href="http:\/\/creativecommons\.org\/licenses\/by-sa\/4\.0\/"><img alt="Creative Commons License" style="border-width:0" src="https:\/\/i\.creativecommons\.org\/l\/by-sa\/4\.0\/88x31\.png" \/><\/a><br \/>This work is licensed under a <a rel="license" href="http:\/\/creativecommons\.org\/licenses\/by-sa\/4\.0\/">Creative Commons Attribution-ShareAlike 4\.0 International License<\/a>\.<\/footer>//g' colophon-1.html
	perl -pi -e 's/^<div class="svg-and-links">/<div style="width:90%;" class="svg-and-links">/g' functions-derivatives-antiderivatives-supplementary-exercises.html
	perl -pi -e 's/<figure class="figure-like" id="figure-inflection-points"><div class="svg-and-links">/<figure class="figure-like" id="figure-inflection-points"><div style="width:75%; min-width:220px" class="svg-and-links">/g' section-graphical-derivatives.html
	perl -pi -e 's/width:10%;min-width:[0-9]*px;/width:23%;min-width:100px;/g' section-graphical-features-from-derivatives.html

# make all the image files, in all formats
# To more surgically create a subset of the image files, use mbx 
# script directly
images:
	install -d $(IMAGESOUT)
	$(MB)/script/mbx -c latex-image -f all -d $(IMAGESOUT) $(SRC)/clm.xml

# a one-time prerequisite for LaTeX conversion of
# problems living on a server, and image construction at server
# our "webwork-tex" is a subdirectory of where the PDF is compiled
# -s specifies an existing WW server to use (ignore security warnings)
webwork-server-tex:
	install -d $(PDFOUT)/webwork-tex
	$(MB)/script/mbx -v -c webwork-tex -s $(SERVER) -d $(PDFOUT)/webwork-tex $(SRC)/clm.xml

# LaTeX for print
# see prerequisite just above
# the "webwork-tex" directory must be given here
# [note trailing slash (subject to change)]
latex:
	install -d $(PDFOUT)
	-rm $(PDFOUT)/*.tex
	cd $(PDFOUT); \
	xsltproc -xinclude --stringparam webwork.server.latex $(PDFOUT)/webwork-tex/ $(CLMXSL)/clm-print.xsl $(SRC)/clm.xml; \

# PDF for print
# see prerequisite just above
# the "webwork-tex" directory must be given here
# [note trailing slash (subject to change)]
pdf:
	install -d $(PDFOUT)
	-rm $(PDFOUT)/*.tex
	cd $(PDFOUT); \
	xsltproc -xinclude --stringparam webwork.server.latex $(PDFOUT)/webwork-tex/ $(CLMXSL)/clm-print.xsl $(SRC)/clm.xml; \
	xelatex clm.tex; \
	xelatex clm.tex

# EPUB
epub:
	install -d $(EPUBOUT)
	-rm $(EPUBOUT)/*.epub
	cd $(EPUBOUT); \
	xsltproc -xinclude $(MBXSL)/mathbook-epub.xsl $(SRC)/clm.xml; \

###########
# Utilities
###########

# Verify Source integrity
#   Leaves "dtderrors.txt" in OUTPUT
#   can then grep on, e.g.
#     "element XXX:"
#     "does not follow"
#     "Element XXXX content does not follow"
#     "No declaration for"
#   Automatically invokes the "less" pager, could configure as $(PAGER)
check:
	install -d $(OUTPUT)
	-rm $(OUTPUT)/dtderrors.*
	-xmllint --xinclude --postvalid --noout --dtdvalid $(DTD)/mathbook.dtd $(SRC)/clm.xml 2> $(OUTPUT)/dtderrors.txt
	# less $(OUTPUT)/dtderrors.txt
